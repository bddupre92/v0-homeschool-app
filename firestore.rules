rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Common functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && isOwner(userId);
      allow delete: if isSignedIn() && isOwner(userId);
    }
    
    // Resources collection
    match /resources/{resourceId} {
      allow read: if true; // Public resources are readable by anyone
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && 
        (resource.data.createdBy == request.auth.uid || 
         resource.data.isPublic == true);
    }
    
    // Boards collection
    match /boards/{boardId} {
      allow read: if isSignedIn() && 
        (resource.data.createdBy == request.auth.uid || 
         resource.data.isPublic == true);
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && resource.data.createdBy == request.auth.uid;
    }
    
    // Events collection
    match /events/{eventId} {
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }
    
    // Community posts
    match /posts/{postId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && resource.data.authorId == request.auth.uid;
    }
  }
}
